swagger: "2.0"
info:
  description: "TVJ Internal tool"
  version: "1.0.0"
  title: "TVJ Internal tool"
host: "localhost"
tags:
- name: "User"
  description: "User Api"
- name: "Department"
  description: "Department Api"
- name: "Title"
  description: "Title Api"
- name: "Team"
  description: "Team Api"
- name: "Country"
  description: "Country Api"
- name: "Language"
  description: "Language Api"
- name: "User Status"
  description: "User Status Api"
- name: "Member Management"
  description: "Member Management Api"
schemes:
- "https"
- "http"
paths:

  /user/login:
    post:
      tags:
      - "User"
      summary: "User Login"
      description: "User Login"
      operationId: "generateAuthenticationToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "UserLoginReqDto"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/UserLoginReqDto"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/UserLoginResDto"
        401:
          description: "Error code: ERR002"
          schema:
            $ref: "#/definitions/MessageResDto"
        423:
          description: "Error code: ERR007"
          schema:
            $ref: "#/definitions/MessageResDto"
              
  /user/save-last-logout:
    get:
      tags:
      - "User"
      summary: "Save user last logout"
      description: "Save user last logout"
      operationId: "Save user last logout"
      produces:
      - "application/json"
      responses:
        200:
          description: "Return code: SUC005"
          schema:
            $ref: "#/definitions/MessageResDto"
        400:
          description: "Return code: ERR011"
          schema:
            $ref: "#/definitions/MessageResDto" 
              
  /user/password-recover-send-request:
    post:
      tags:
      - "User"
      summary: "Recover password send request"
      description: "Recover password send request"
      operationId: "passwordRecoverSendRequest"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "PasswordRecoverSendRequestReqDto"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/PasswordRecoverSendRequestReqDto"
      responses:
        200:
          description: "Return code: SUC001"
          schema:
            $ref: "#/definitions/MessageResDto"
        408:
          description: "Return code: ERR002"
          schema:
            $ref: "#/definitions/MessageResDto"

  /user/password-recover-confirm-token:
    get:
      tags:
      - "User"
      summary: "Recover password confirm token"
      description: "Recover password confirm token"
      operationId: "passwordRecoverConfirmToken"
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "query"
        description: "less than 100 characters"
        required: true
        type: "string"
      responses:
        200:
          description: "Return code: SUC004"
          schema:
            $ref: "#/definitions/MessageResDto"
        400:
          description: "Return code: ERR004"
          schema:
            $ref: "#/definitions/MessageResDto" 
              
  /user/password-recover-update-password:
    post:
      tags:
      - "User"
      summary: "Recover password update password"
      description: "Recover password update password"
      operationId: "recoverPasswordUpdatePassword"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "PasswordRecoverUpdatePasswordReqDto"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/PasswordRecoverUpdatePasswordReqDto"
      responses:
        200:
          description: "Return code: SUC002"
          schema:
            $ref: "#/definitions/MessageResDto"
        408:
          description: "Return code: ERR005"
          schema:
            $ref: "#/definitions/MessageResDto"
              
  /user/user-setting-get-info:
    get:
      tags:
      - "User"
      summary: "User setting get info"
      description: "User setting get info"
      operationId: "getUserSetting"
      produces:
      - "application/json"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/UserSettingResDto"
        400:
          description: "Return code: ERR009"
          schema:
            $ref: "#/definitions/MessageResDto" 
            
  /user-status/list:
    get:
      tags:
      - "User Status"
      summary: "Get all user status"
      description: "Get all user status"
      operationId: "getAllUserStatus"
      produces:
      - "application/json"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/UserStatusListResDto"
            
  /user/user-setting-update-info:
    put:
      tags:
      - "User"
      summary: "User setting update info"
      description: "User setting update info"
      operationId: "updateUserSetting"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "UserSettingReqDto"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/UserSettingUpdateReqDto"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/UserSettingUpdateReqDto"
        400:
          description: "Return code: ERR009"
          schema:
            $ref: "#/definitions/MessageResDto" 
            
  /user/user-setting-update-password:
    patch:
      tags:
      - "User"
      summary: "User setting update password"
      description: "User setting update password"
      operationId: "updatePassword"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "UserSettingUpdatePasswordReqDto"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/UserSettingUpdatePasswordReqDto"
      responses:
        200:
          description: "Return code: SUC002"
          schema:
            $ref: "#/definitions/MessageResDto"
        400:
          description: "Return code: ERR005"
          schema:
            $ref: "#/definitions/MessageResDto" 

  /user/upload-avatar:
    post:
      tags:
      - "User"
      summary: "User upload avatar"
      description: "User upload avatar"
      operationId: "uploadAvatar"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
        - in: "formData"
          name: file
          type: file
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/FileResDto"
        408:
          description: "Return code: ERR006"
          schema:
            $ref: "#/definitions/MessageResDto"

  /user/remove-avatar:
    delete:
      tags:
      - "User"
      summary: "User remove avatar"
      description: "User remove avatar"
      operationId: "removeAvatar"
      produces:
      - "application/json"
      responses:
        200:
          description: "Return code: SUC003"
          schema:
            $ref: "#/definitions/MessageResDto"
        408:
          description: "Return code: ERR010"
          schema:
            $ref: "#/definitions/MessageResDto"

  /department/list:
    get:
      tags:
      - "Department"
      summary: "Get all department"
      description: "Get all department"
      operationId: "getAllDepartment"
      produces:
      - "application/json"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/DepartmentListResDto"
            
  /title/list:
    get:
      tags:
      - "Title"
      summary: "Get all title"
      description: "Get all title"
      operationId: "getAllTitle"
      produces:
      - "application/json"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/TitleListResDto"
            
  /team/list-by-department:
    get:
      tags:
      - "Team"
      summary: "Get team by department"
      description: "Get team by department"
      operationId: "getTeamByDepartment"
      produces:
      - "application/json"
      parameters:
      - name: "departmentId"
        in: "query"
        description: "between 1 and 40 character"
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/TeamListResDto"
            
  /country/list:
    get:
      tags:
      - "Country"
      summary: "Get all country"
      description: "Get all country"
      operationId: "getAllCountry"
      produces:
      - "application/json"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/CountryListResDto"
            
  /language/list:
    get:
      tags:
      - "Language"
      summary: "Get all language"
      description: "Get all language"
      operationId: "getAllLanguage"
      produces:
      - "application/json"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/LanguageListResDto"
            
  /member-management/search:
    get:
      tags:
      - "Member Management"
      summary: "Search member"
      description: "Search member"
      operationId: "searchMember"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "search by name, less than 40 characters"
        type: "string"
      - name: "username"
        in: "query"
        description: "search by username, less than 20 characters"
        type: "string"
      - name: "titleId"
        in: "query"
        description: "search by title, less than 40 characters"
        type: "string"
      - name: "isActivated"
        in: "query"
        description: "search by is activated"
        type: "boolean"
      - name: "limit"
        in: "query"
        description: "paging limit, min = 0"
        type: "integer"
      - name: "offset"
        in: "query"
        description: "paging offset, min = 1"
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/MemberListResDto"
            
  /member-management/add-member:
    post:
      tags:
      - "Member Management"
      summary: "Add member"
      description: "Add member"
      operationId: "addMember"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "MemberAddReqDto"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/MemberAddReqDto"
      responses:
        200:
          description: "Error code: SUC006"
          schema:
            $ref: "#/definitions/MessageResDto"
        400:
          description: "Error code: ERR012"
          schema:
            $ref: "#/definitions/MessageResDto"
            
  /member-management/update-member:
    put:
      tags:
      - "Member Management"
      summary: "Update member"
      description: "Update member"
      operationId: "updateMember"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "MemberUpdateReqDto"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/MemberUpdateReqDto"
      responses:
        200:
          description: "Error code: SUC007"
          schema:
            $ref: "#/definitions/MessageResDto"
        400:
          description: "Error code: ERR013"
          schema:
            $ref: "#/definitions/MessageResDto"
            
  /member-management/view-member:
    get:
      tags:
      - "Member Management"
      summary: "View member"
      description: "View member"
      operationId: "viewMember"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "search by username, less than 20 characters"
        type: "string"
        required: true
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/MemberResDto"
        400:
          description: "Error code: ERR014"
          schema:
            $ref: "#/definitions/MessageResDto"
            
  /member-management/update-member-activate-status:
    patch:
      tags:
      - "Member Management"
      summary: "Update member activate status"
      description: "Update member activate status"
      operationId: "updateMemberActivateStatus"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "MemberActivateStatusUpdateReqDto"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/MemberActivateStatusUpdateReqDto"
      responses:
        200:
          description: "Error code: SUC008"
          schema:
            $ref: "#/definitions/MessageResDto"
        400:
          description: "Error code: ERR015"
          schema:
            $ref: "#/definitions/MessageResDto"
            
  /member-management/delete-member:
    delete:
      tags:
      - "Member Management"
      summary: "Delete member"
      description: "Delete member"
      operationId: "deleteMember"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "MemberDeleteReqDto"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/MemberDeleteReqDto"
      responses:
        200:
          description: "Error code: SUC009"
          schema:
            $ref: "#/definitions/MessageResDto"
        400:
          description: "Error code: ERR016"
          schema:
            $ref: "#/definitions/MessageResDto"
            
definitions:

  UserLoginReqDto:
    type: "object"
    properties:
      username:
        type: string
        description: "Not Blank, less than 20 characters"
      password:
        type: string
        description: "Not Blank, between 8 and 20 characters"

  UserLoginResDto:
    type: "object"
    properties:
      token:
        type: string
        description: ""
      firstName:
        type: string
        description: ""
      lastName:
        type: string
        description: ""
      roleName:
        type: string
        description: ""
      isFirstTimeLogin:
        type: boolean
        description: ""
      avatar:
        type: string
        description: ""
        
  PasswordRecoverSendRequestReqDto:
    type: "object"
    properties:
      username:
        type: string
        description: "less than 20 characters" 
        
  UserSettingResDto:    
    type: "object"
    properties:
      username:
        type: string
        description: ""  
      firstName:
        type: string
        description: ""
      lastName:
        type: string
        description: ""
      email:
        type: string
        description: ""
      departmentId:
        type: string
        description: ""
      departmentName:
        type: boolean
        description: ""
      teamId:
        type: string
        description: ""
      teamName:
        type: string
        description: ""
      titleName:
        type: string
        description: ""
      address:
        type: string
        description: ""
      phone:
        type: boolean
        description: ""
      countryId:
        type: string
        description: ""
      countryName:
        type: string
        description: ""
      languageId:
        type: string
        description: ""
      languageName:
        type: string
        description: ""
      updatedDate:
        type: string
        description: ""
      statusId:
        type: string
        description: ""
      statusName:
        type: string
        description: ""
      avatar:
        type: string
        description: ""
        
  PasswordRecoverUpdatePasswordReqDto:
    type: "object"
    properties:
      token:
        type: string
        description: "Not Blank"
      newPassword:
        type: string
        description: "Not Blank, between 8 and 20 characters"
        
  UserSettingUpdateReqDto:
    type: "object"
    properties:
      teamId:
        type: string
        description: "between 1 and 40 characters"  
      address:
        type: string
        description: "less than 400 characters"
      phone:
        type: string
        description: "between 8 and 20 characters"
      countryId:
        type: string
        description: "between 1 and 40 characters"  
      languageId:
        type: boolean
        description: "Not Blank, between 1 and 40 characters"
      statusId:
        type: string
        description: "Not Blank, '1'-AVAILABLE, '2'-AWAY, '3'-BUSY, '4'-DO_NOT_DISTURB"
        
  UserSettingUpdatePasswordReqDto:
    type: "object"
    properties:
      oldPassword:
        type: string
        description: "Not Blank, between 8 and 20 characters"
      newPassword:
        type: string
        description: "Not Blank, between 8 and 20 characters"

  FileResDto:
    type: "object"
    properties:
      fileName:
        type: string
        description: ""    
        
  DepartmentListResDto:
    type: "object"
    properties:
      departmentResDtoList:
        type: "array"
        items:
          $ref: "#/definitions/DepartmentResDto"
      
  DepartmentResDto:
    type: "object"
    properties:
      departmentId:
        type: string
        description: ""    
      departmentCode:
        type: string
        description: ""    
      departmentName:
        type: string
        description: ""    
        
  TitleListResDto:
    type: "object"
    properties:
      titleResDtoList:
        type: "array"
        items:
          $ref: "#/definitions/TitleResDto"
      
  TitleResDto:
    type: "object"
    properties:
      titleId:
        type: string
        description: ""    
      titleCode:
        type: string
        description: ""    
      titleName:
        type: string
        description: ""   

  TeamListResDto:
    type: "object"
    properties:
      teamResDtoList:
        type: "array"
        items:
          $ref: "#/definitions/TeamResDto"
      
  TeamResDto:
    type: "object"
    properties:
      teamId:
        type: string
        description: ""    
      teamCode:
        type: string
        description: ""    
      teamName:
        type: string
        description: ""   

  CountryListResDto:
    type: "object"
    properties:
      countryResDtoList:
        type: "array"
        items:
          $ref: "#/definitions/CountryResDto"
      
  CountryResDto:
    type: "object"
    properties:
      countryId:
        type: string
        description: ""    
      countryName:
        type: string
        description: ""    

  LanguageListResDto:
    type: "object"
    properties:
      languageResDtoList:
        type: "array"
        items:
          $ref: "#/definitions/LanguageResDto"
      
  LanguageResDto:
    type: "object"
    properties:
      languageId:
        type: string
        description: ""    
      languageName:
        type: string
        description: ""    
        
  UserStatusListResDto:
    type: "object"
    properties:
      userStatusResDtoList:
        type: "array"
        items:
          $ref: "#/definitions/UserStatusResDto"
      
  UserStatusResDto:
    type: "object"
    properties:
      statusId:
        type: string
        description: ""    
      statusName:
        type: string
        description: ""    
        
  MemberListResDto:
    type: "object"
    properties:
      memberResDtoList:
        type: "array"
        items:
          $ref: "#/definitions/MemberResDto"

  MemberResDto:
    type: "object"
    properties:
      username:
        type: string
        description: ""    
      firstName:
        type: string
        description: ""   
      lastName:
        type: string
        description: ""    
      email:
        type: string
        description: ""   
      titleId:
        type: string
        description: ""    
      titleName:
        type: string
        description: ""    
      activated:
        type: boolean
        description: ""       
        
  MemberAddReqDto:
    type: "object"
    properties:
      username:
        type: string
        description: "Not Blank, less than 20 characters"
      firstName:
        type: string
        description: "Not Blank"
      lastName:
        type: string
        description: "Not Blank"
      titleId:
        type: string
        description: "Not Blank, less than 40 characters"
      email:
        type: string
        description: "Not Blank, must have domain tinhvan.com"
      password:
        type: string
        description: "Not Blank, between 8 and 20 characters"
        
  MemberUpdateReqDto:
    type: "object"
    properties:
      username:
        type: string
        description: "Not Blank, less than 20 characters"
      firstName:
        type: string
        description: "Not Blank"
      lastName:
        type: string
        description: "Not Blank"
      titleId:
        type: string
        description: "Not Blank, less than 40 characters"
      email:
        type: string
        description: "Not Blank, must have domain tinhvan.com"
        
  MemberActivateStatusUpdateReqDto:      
    type: "object"
    properties:
      username:
        type: string
        description: "Not Blank, less than 20 characters"
      activated:
        type: boolean
        description: "Not Blank"    
        
  MemberDeleteReqDto:      
    type: "object"
    properties:
      username:
        type: string
        description: "Not Blank, less than 20 characters"
        
  MessageResDto:
    type: "object"
    properties:
      code:
        type: string
        description: ""
      message:
        type: string
        description: ""